{"version":3,"sources":["findByType.js","Card.js","App.js","serviceWorker.js","index.js"],"names":["findByType","children","component","result","type","React","Children","forEach","child","childType","props","includes","push","Header","Body","Footer","CardTemplate","className","HEADER","BODY","FOOTER","defaultProps","propTypes","oneOfType","arrayOf","node","isRequired","App","state","courses","loading","sortBy","sortOrder","sort","bind","sortAfterFilter","filterCourses","sortCourses","fetch","then","res","json","setState","originalResponse","this","a","b","event","target","value","filter","item","progress","Fragment","name","id","defaultValue","onChange","disabled","length","map","index","image","title","description","Card","key","src","alt","style","width","onClick","alert","Component","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","href","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.e4db04ce.chunk.js","sourcesContent":["import React from \"react\";\nconst findByType = (children, component) => {\n  const result = [];\n  const type = component;\n  React.Children.forEach(children, child => {\n    const childType = child && child.props.type;\n    if (type.includes(childType)) {\n      result.push(child);\n    }\n  });\n  return result[0];\n};\nexport default findByType;\n","import React from \"react\";\nimport { oneOfType, arrayOf, node } from \"prop-types\";\n\nimport findByType from \"./findByType\";\n\nfunction Header() {\n  return null;\n}\nfunction Body() {\n  return null;\n}\nfunction Footer() {\n  return null;\n}\n\nHeader.defaultProps = { type: \"Header\" };\nBody.defaultProps = { type: \"Body\" };\nFooter.defaultProps = { type: \"Footer\" };\n\nfunction CardTemplate(props) {\n  const { children, className } = props;\n\n  const HEADER = findByType(children, \"Header\");\n  const BODY = findByType(children, \"Body\");\n  const FOOTER = findByType(children, \"Footer\");\n\n  return (\n    <div className={`card ${className || \"\"}`}>\n      {HEADER && (\n        <div className={`card-header ${HEADER.props.className || \"\"}`}>\n          {HEADER.props.children}\n        </div>\n      )}\n      {BODY && (\n        <div className={`card-body ${BODY.props.className || \"\"}`}>\n          {BODY.props.children}\n        </div>\n      )}\n      {FOOTER && (\n        <div className={`card-footer ${FOOTER.props.className || \"\"}`}>\n          {FOOTER.props.children}\n        </div>\n      )}\n    </div>\n  );\n}\n\nCardTemplate.Header = Header;\nCardTemplate.Body = Body;\nCardTemplate.Footer = Footer;\n\nexport default CardTemplate;\n\n// Header, Body, Footer propTypes\nHeader.propTypes = Body.propTypes = Footer.propTypes = {\n  children: oneOfType([arrayOf(node), node]).isRequired\n};\n","import React from \"react\";\n\nimport Card from \"./Card\";\n\nimport \"./app.scss\";\n\nclass App extends React.Component {\n  state = {\n    courses: [],\n    loading: true,\n    sortBy: null,\n    sortOrder: null\n  };\n\n  sort = this.sort.bind(this);\n  sortAfterFilter = this.sortAfterFilter.bind(this);\n  filterCourses = this.filterCourses.bind(this);\n  sortCourses = this.sortCourses.bind(this);\n\n  componentDidMount() {\n    fetch(\"http://api.myjson.com/bins/nxp6l\")\n      .then(res => res.json())\n      .then(res =>\n        this.setState({ courses: res, originalResponse: res, loading: false })\n      );\n  }\n\n  sort() {\n    switch (this.state.sortOrder) {\n      case \"asc\":\n      default:\n        this.setState({\n          courses: this.state.courses.sort(\n            (a, b) => a[this.state.sortBy] > b[this.state.sortBy]\n          )\n        });\n        return;\n      case \"desc\":\n        this.setState({\n          courses: this.state.courses.sort(\n            (a, b) => a[this.state.sortBy] < b[this.state.sortBy]\n          )\n        });\n        return;\n    }\n  }\n\n  sortAfterFilter() {\n    if (this.state.sortBy && this.state.sortOrder) this.sort();\n  }\n\n  filterCourses(event) {\n    switch (event.target.value) {\n      case \"all\":\n      default:\n        this.setState(\n          { courses: this.state.originalResponse },\n          this.sortAfterFilter\n        );\n        break;\n      case \"completed\":\n        this.setState(\n          {\n            courses: this.state.courses.filter(item => item.progress === 100)\n          },\n          this.sortAfterFilter\n        );\n        break;\n      case \"not_completed\":\n        this.setState(\n          {\n            courses: this.state.courses.filter(\n              item => item.progress > 0 && item.progress < 100\n            )\n          },\n          this.sortAfterFilter\n        );\n        break;\n      case \"not_started\":\n        this.setState(\n          {\n            courses: this.state.courses.filter(item => item.progress === 0)\n          },\n          this.sortAfterFilter\n        );\n        break;\n    }\n  }\n\n  sortCourses(event) {\n    this.setState(\n      { sortOrder: event.target.value },\n      () => this.state.sortBy && this.sort()\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"app\">\n        {this.state.loading ? (\n          <div className=\"loader\"></div>\n        ) : (\n          <React.Fragment>\n            <div className=\"filters\">\n              <select\n                name=\"filter\"\n                id=\"filter\"\n                defaultValue=\"\"\n                onChange={this.filterCourses}\n              >\n                <option value=\"\" disabled>\n                  Filter\n                </option>\n                <option value=\"all\">All</option>\n                <option value=\"completed\">Completed</option>\n                <option value=\"not_completed\">Not Completed</option>\n                <option value=\"not_started\">Not Started</option>\n              </select>\n              <select\n                name=\"sortBy\"\n                id=\"sortBy\"\n                defaultValue=\"\"\n                onChange={event => {\n                  this.setState({ sortBy: event.target.value }, this.sort);\n                }}\n              >\n                <option value=\"\" disabled>\n                  Sort by\n                </option>\n                <option value=\"progress\">Progress</option>\n                <option value=\"title\">Title</option>\n              </select>\n              {this.state.sortBy && (\n                <select\n                  name=\"order\"\n                  id=\"order\"\n                  defaultValue=\"\"\n                  onChange={this.sortCourses}\n                >\n                  <option value=\"\" disabled>\n                    Order\n                  </option>\n                  <option value=\"asc\">Ascending</option>\n                  <option value=\"desc\">Descending</option>\n                </select>\n              )}\n            </div>\n            {this.state.courses.length > 0 ? (\n              <div className=\"grid\">\n                {this.state.courses.map(\n                  ({ image, title, description, progress }, index) => (\n                    <Card className=\"course-card\" key={index}>\n                      <Card.Header>\n                        <div className=\"ratio-container a24by9\">\n                          <img src={image} alt=\"\" />\n                        </div>\n                      </Card.Header>\n                      <Card.Body>\n                        <div className=\"content\">\n                          <div className=\"content__title\">{title}</div>\n                          <div className=\"content__description\">\n                            {description}\n                          </div>\n                        </div>\n                        <div className=\"course-progress\">\n                          <div className=\"d-flex\">\n                            <div className=\"status\">\n                              {progress === 0\n                                ? \"not started\"\n                                : progress + \"% completed\"}\n                            </div>\n                          </div>\n                          <div className=\"progress\">\n                            <div\n                              className=\"progress__bar\"\n                              style={{ width: progress + \"%\" }}\n                            ></div>\n                          </div>\n                        </div>\n                      </Card.Body>\n                      <Card.Footer>\n                        <button\n                          className=\"btn\"\n                          onClick={() => alert(`${title}`)}\n                        >\n                          {progress === 0\n                            ? \"start\"\n                            : progress < 100\n                            ? \"continue\"\n                            : \"review\"}\n                        </button>\n                      </Card.Footer>\n                    </Card>\n                  )\n                )}\n              </div>\n            ) : (\n              <h1>No courses found</h1>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}